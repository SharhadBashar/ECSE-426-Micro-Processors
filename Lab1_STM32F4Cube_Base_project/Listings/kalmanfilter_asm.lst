


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             text, CODE, READONLY
    2 00000000                 EXPORT           kal
    3 00000000                 IMPORT           testbench
    4 00000000         kal
    5 00000000         
    6 00000000         ;KALMAN FILTERING SUBROUTINE
    7 00000000         
    8 00000000         ;Passing parameters to subroutine
    9 00000000         ;R0 - pointer to input (zk)
   10 00000000         ;R1 - pointer to output (xk|k)
   11 00000000         ;R2 - array's length
   12 00000000         ;R3 - pointer to kalman states
   13 00000000         ;R4 - loop counter
   14 00000000         ;R5 - offset register for loop
   15 00000000 E92D 1FF0       PUSH             {R4-R12}    ;load pointers
   16 00000004 F04F 0400       MOV              R4, #0      ;initialize loop co
                                                            uner register 
   17 00000008         
   18 00000008         ;Holding values of kalman State
   19 00000008 ED93 2A00       VLDR.f32         S4, [R3]    ;f
   20 0000000C EDD3 2A01       VLDR.f32         S5, [R3, #4] ;h
   21 00000010 ED93 3A02       VLDR.f32         S6, [R3, #8] ;q
   22 00000014 EDD3 3A03       VLDR.f32         S7, [R3, #12] ;r
   23 00000018 ED93 4A04       VLDR.f32         S8, [R3, #16] ;k
   24 0000001C EDD3 4A05       VLDR.f32         S9, [R3, #20] ;x (initial k-1)
   25 00000020 ED93 5A06       VLDR.f32         S10, [R3, #24] ;p (initial k-1)
                                                            
   26 00000024         
   27 00000024         ;Loop iteration for process:
   28 00000024         Calc
   29 00000024 EDD0 5A00       VLDR.f32         S11, [R0]
   30 00000028         
   31 00000028         ;Calculate Pk|k-1 and put it in S10.
   32 00000028 EE22 5A05       VMUL.f32         S10, S4, S10 ; F*Pk-1|k-1
   33 0000002C EE25 5A02       VMUL.f32         S10, S10, S4 ; F*Pk-1|k-1*Ft
   34 00000030 EE35 5A03       VADD.f32         S10, S10, S6 
                                                            ; F*Pk-1|k-1*Ft + Q
                                                            
   35 00000034         
   36 00000034         ;Calculate K and put in S8.
   37 00000034 EE25 4A22       VMUL.f32         S8, S10, S5 ; Pk|k-1*Ht
   38 00000038 EE24 6A22       VMUL.f32         S12, S8, S5 ; H*Pk|k-1*Ht
   39 0000003C EE36 6A23       VADD.f32         S12, S12, S7 ; H*Pk|k-1*Ht + R
   40 00000040 EEB5 6A40       VCMP.f32         S12, #0.0   ;check if divisor i
                                                            s zero
   41 00000044 BF08            IT               EQ
   42 00000046 ED9F 6A12       VLDREQ.f32       S12, =0.01  ;set to 0.01 to avo
                                                            id division by 0
   43 0000004A EE84 4A06       VDIV.f32         S8, S8, S12 ; (Pk|k-1*Ht)/(H*Pk
                                                            |k-1*Ht + R)
   44 0000004E ED83 4A04       VSTR.f32         S8, [R3, #16] ;push to kalman s
                                                            tate vector
   45 00000052         
   46 00000052         ;Calculate Pk|k and put in S10.
   47 00000052 EEB7 6A00       VLDR.f32         S12, =1.0   ; I
   48 00000056 EE04 6A62       VMLS.f32         S12, S8, S5 ; I-KH
   49 0000005A EE25 5A06       VMUL.f32         S10, S10, S12 ; (I-KH)*Pk|k-1
   50 0000005E ED83 5A06       VSTR.f32         S10, [R3, #24] ;push to kalman 
                                                            state vector 



ARM Macro Assembler    Page 2 


   51 00000062         
   52 00000062         ;Caculate xk|k.
   53 00000062 EE62 4A24       VMUL.f32         S9, S4, S9  ; F*xk-1|k-1
   54 00000066 EEB0 6A65       VMOV.f32         S12, S11    ; Load zk
   55 0000006A EE02 6AE4       VMLS.f32         S12, S5, S9 ; zk - H*xk|k-1
   56 0000006E EE44 4A06       VMLA.f32         S9, S8, S12 ; xk|k-1 + K(zk - H
                                                            *xk|k-1)
   57 00000072 EDC1 4A00       VSTR.f32         S9, [R1]    ;push to output arr
                                                            ay
   58 00000076 EDC3 4A05       VSTR.f32         S9, [R3, #20] ;push to kalman s
                                                            tate vector
   59 0000007A         
   60 0000007A         ;Housekeeping.
   61 0000007A F100 0004       ADD              R0, R0, #4  ; increment input c
                                                            ounter
   62 0000007E F101 0104       ADD              R1, R1, #4  ; increment output 
                                                            counter
   63 00000082 1C64            ADDS             R4, R4, #1  ; incrememnt loop c
                                                            ounter
   64 00000084 4294            CMP              R4, R2      ; compare counter t
                                                            o array length
   65 00000086 D1CD            BNE              Calc        ; loop if not at en
                                                            d of array
   66 00000088         ;LOOP END
   67 00000088         
   68 00000088 E8BD 1FF0       POP              {R4-R12}
   69 0000008C 4770            BX               LR
   70 0000008E                 END
              00 00 3C23D70A 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\kalmanfilter_asm.d -o.\objects\kalmanfilter_asm.o -IF
:\Lab1_STM32F4Cube_Base_project\RTE -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.0-Beta4
\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.9.0\Drivers\CMSIS\Dev
ice\ST\STM32F4xx\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VER
SION SETA 515" --predefine="_RTE_ SETA 1" --predefine="STM32F407xx SETA 1" --li
st=.\listings\kalmanfilter_asm.lst kalmanfilter_asm.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Calc 00000024

Symbol: Calc
   Definitions
      At line 28 in file kalmanfilter_asm.s
   Uses
      At line 65 in file kalmanfilter_asm.s
Comment: Calc used once
kal 00000000

Symbol: kal
   Definitions
      At line 4 in file kalmanfilter_asm.s
   Uses
      At line 2 in file kalmanfilter_asm.s
Comment: kal used once
text 00000000

Symbol: text
   Definitions
      At line 1 in file kalmanfilter_asm.s
   Uses
      None
Comment: text unused
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

testbench 00000000

Symbol: testbench
   Definitions
      At line 3 in file kalmanfilter_asm.s
   Uses
      None
Comment: testbench unused
1 symbol
341 symbols in table
